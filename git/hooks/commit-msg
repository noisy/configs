#!/bin/sh
#
# An example hook script to check the commit log message.
# Called by "git commit" with one argument, the name of the file
# that has the commit message.  The hook should exit with non-zero
# status after issuing an appropriate message if it wants to stop the
# commit.  The hook is allowed to edit the commit message file.
#
# To enable this hook, rename this file to "commit-msg".

# Uncomment the below to add a Signed-off-by line to the message.
# Doing this in a hook is a bad idea in general, but the prepare-commit-msg
# hook is more suited to it.
#
# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\(.*>\).*$/Signed-off-by: \1/p')
# grep -qs "^$SOB" "$1" || echo "$SOB" >> "$1"

# This example catches duplicate Signed-off-by lines.


nosetests unittests 2> /tmp/unittest_result;
status=$?
if test $status -eq 0
then
	tail --lines 3 /tmp/unittest_result | sed '/^$/d' | sed ':a;N;$!ba;s/\n/; /g'
	rm /tmp/unittest_result
	exit 0
else
	line=`cat -n /tmp/unittest_result | grep "======" | head -n 1 | awk '{print $1;}'`
	wc=`cat /tmp/unittest_result | wc -l`
	tail --lines `expr $wc - $line + 1` /tmp/unittest_result
	rm /tmp/unittest_result
	exit 1
fi
